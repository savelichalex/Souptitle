;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name teach-by-friends.parser, :imports nil, :requires {string clojure.string, clojure.string clojure.string, teach-by-friends.stop-words teach-by-friends.stop-words, set clojure.set, clojure.set clojure.set}, :uses {stop-words teach-by-friends.stop-words}, :defs {accumulate-terms {:protocol-inline nil, :meta {:file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/parser.cljs", :line 66, :column 7, :end-line 66, :end-column 23, :arglists (quote ([acc term]))}, :name teach-by-friends.parser/accumulate-terms, :variadic false, :file "src/teach_by_friends/parser.cljs", :end-column 23, :method-params ([acc term]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 2, :fn-var true, :arglists (quote ([acc term]))}, sentence? {:protocol-inline nil, :meta {:file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/parser.cljs", :line 46, :column 7, :end-line 46, :end-column 16, :arglists (quote ([sentence]))}, :name teach-by-friends.parser/sentence?, :variadic false, :file "src/teach_by_friends/parser.cljs", :end-column 16, :method-params ([sentence]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sentence]))}, time-to-ms {:protocol-inline nil, :meta {:file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/parser.cljs", :line 8, :column 7, :end-line 8, :end-column 17, :arglists (quote ([time]))}, :name teach-by-friends.parser/time-to-ms, :variadic false, :file "src/teach_by_friends/parser.cljs", :end-column 17, :method-params ([time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([time]))}, exclude {:name teach-by-friends.parser/exclude, :file "src/teach_by_friends/parser.cljs", :line 26, :column 1, :end-line 26, :end-column 13, :meta {:file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/parser.cljs", :line 26, :column 6, :end-line 26, :end-column 13}}, friends-names {:name teach-by-friends.parser/friends-names, :file "src/teach_by_friends/parser.cljs", :line 16, :column 1, :end-line 16, :end-column 19, :meta {:file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/parser.cljs", :line 16, :column 6, :end-line 16, :end-column 19}}, parse-term {:protocol-inline nil, :meta {:file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/parser.cljs", :line 28, :column 7, :end-line 28, :end-column 17, :arglists (quote ([sentence number from to index term]))}, :name teach-by-friends.parser/parse-term, :variadic false, :file "src/teach_by_friends/parser.cljs", :end-column 17, :method-params ([sentence number from to index term]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 6, :fn-var true, :arglists (quote ([sentence number from to index term]))}, parse-time-block {:protocol-inline nil, :meta {:file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/parser.cljs", :line 57, :column 7, :end-line 57, :end-column 23, :arglists (quote ([acc [_ from to first-sentence second-sentence]]))}, :name teach-by-friends.parser/parse-time-block, :variadic false, :file "src/teach_by_friends/parser.cljs", :end-column 23, :method-params ([acc p__18158]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 2, :fn-var true, :arglists (quote ([acc [_ from to first-sentence second-sentence]]))}, parse-srt {:protocol-inline nil, :meta {:file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/parser.cljs", :line 72, :column 7, :end-line 72, :end-column 16, :arglists (quote ([srt]))}, :name teach-by-friends.parser/parse-srt, :variadic false, :file "src/teach_by_friends/parser.cljs", :end-column 16, :method-params ([srt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 1, :fn-var true, :arglists (quote ([srt]))}, parse-to-terms {:protocol-inline nil, :meta {:file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/parser.cljs", :line 37, :column 7, :end-line 37, :end-column 21, :arglists (quote ([sentence number from to]))}, :name teach-by-friends.parser/parse-to-terms, :variadic false, :file "src/teach_by_friends/parser.cljs", :end-column 21, :method-params ([sentence number from to]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 4, :fn-var true, :arglists (quote ([sentence number from to]))}, time-regex {:name teach-by-friends.parser/time-regex, :file "src/teach_by_friends/parser.cljs", :line 6, :column 1, :end-line 6, :end-column 16, :meta {:file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/parser.cljs", :line 6, :column 6, :end-line 6, :end-column 16}}, parse-sentence {:protocol-inline nil, :meta {:file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/parser.cljs", :line 43, :column 7, :end-line 43, :end-column 21, :arglists (quote ([number from to sentence]))}, :name teach-by-friends.parser/parse-sentence, :variadic false, :file "src/teach_by_friends/parser.cljs", :end-column 21, :method-params ([number from to sentence]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 4, :fn-var true, :arglists (quote ([number from to sentence]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:normalized :sentence-number :overall-number :raw :sentence :in-sentence-number :from :to}, :order [:sentence :sentence-number :in-sentence-number :from :to :raw :normalized :overall-number]}, :doc nil}