;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name teach-by-friends.remote-db-service, :imports nil, :requires nil, :uses nil, :defs {download {:protocol-inline nil, :meta {:file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/remote_db_service.cljs", :line 22, :column 4, :end-line 22, :end-column 12, :protocol teach-by-friends.remote-db-service/IRemoteDB, :doc "Load any file from file storage", :arglists (quote ([db path]))}, :protocol teach-by-friends.remote-db-service/IRemoteDB, :name teach-by-friends.remote-db-service/download, :variadic false, :file "src/teach_by_friends/remote_db_service.cljs", :end-column 12, :method-params ([db path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db path])), :doc "Load any file from file storage"}, fetch {:protocol-inline nil, :meta {:file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/remote_db_service.cljs", :line 3, :column 7, :end-line 3, :end-column 12, :arglists (quote ([url] [url config])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([url] [url config]), :arglists ([url] [url config]), :arglists-meta (nil nil)}}, :name teach-by-friends.remote-db-service/fetch, :variadic false, :file "src/teach_by_friends/remote_db_service.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([url] [url config]), :arglists ([url] [url config]), :arglists-meta (nil nil)}, :method-params ([url] [url config]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 2, :fn-var true, :arglists ([url] [url config])}, GithubDB {:num-fields 1, :protocols #{teach-by-friends.remote-db-service/IRemoteDB}, :name teach-by-friends.remote-db-service/GithubDB, :file "src/teach_by_friends/remote_db_service.cljs", :end-column 18, :type true, :column 10, :line 27, :record false, :end-line 27, :skip-protocol-flag nil}, GITHUB_DOWNLOAD_URL {:name teach-by-friends.remote-db-service/GITHUB_DOWNLOAD_URL, :file "src/teach_by_friends/remote_db_service.cljs", :line 25, :column 1, :end-line 25, :end-column 35, :private true, :meta {:file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/remote_db_service.cljs", :line 25, :column 16, :end-line 25, :end-column 35, :private true}}, download-json {:protocol-inline nil, :meta {:file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/remote_db_service.cljs", :line 23, :column 4, :end-line 23, :end-column 17, :protocol teach-by-friends.remote-db-service/IRemoteDB, :doc "Load JSON from remote file storage", :arglists (quote ([db path]))}, :protocol teach-by-friends.remote-db-service/IRemoteDB, :name teach-by-friends.remote-db-service/download-json, :variadic false, :file "src/teach_by_friends/remote_db_service.cljs", :end-column 17, :method-params ([db path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db path])), :doc "Load JSON from remote file storage"}, ->DropboxDB {:protocol-inline nil, :meta {:file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/remote_db_service.cljs", :line 38, :column 10, :end-line 38, :end-column 19, :protocols #{teach-by-friends.remote-db-service/IRemoteDB}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([auth-api-key]))}, :protocols #{teach-by-friends.remote-db-service/IRemoteDB}, :name teach-by-friends.remote-db-service/->DropboxDB, :variadic false, :file "src/teach_by_friends/remote_db_service.cljs", :end-column 19, :method-params ([auth-api-key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([auth-api-key])), :skip-protocol-flag nil}, IRemoteDB {:meta {:file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/remote_db_service.cljs", :line 21, :column 14, :end-line 21, :end-column 23, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {download [[db path]], download-json [[db path]]}}}, :protocol-symbol true, :name teach-by-friends.remote-db-service/IRemoteDB, :file "src/teach_by_friends/remote_db_service.cljs", :end-column 23, :column 1, :line 21, :protocol-info {:methods {download [[db path]], download-json [[db path]]}}, :info nil, :end-line 21, :impls #{teach-by-friends.remote-db-service/DropboxDB teach-by-friends.remote-db-service/GithubDB}, :doc nil, :jsdoc ("@interface")}, to-json {:protocol-inline nil, :meta {:file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/remote_db_service.cljs", :line 18, :column 7, :end-line 18, :end-column 14, :arglists (quote ([data]))}, :name teach-by-friends.remote-db-service/to-json, :variadic false, :file "src/teach_by_friends/remote_db_service.cljs", :end-column 14, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, DROPBOX_DOWNLOAD_URL {:name teach-by-friends.remote-db-service/DROPBOX_DOWNLOAD_URL, :file "src/teach_by_friends/remote_db_service.cljs", :line 36, :column 1, :end-line 36, :end-column 36, :private true, :meta {:file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/remote_db_service.cljs", :line 36, :column 16, :end-line 36, :end-column 36, :private true}}, DropboxDB {:num-fields 1, :protocols #{teach-by-friends.remote-db-service/IRemoteDB}, :name teach-by-friends.remote-db-service/DropboxDB, :file "src/teach_by_friends/remote_db_service.cljs", :end-column 19, :type true, :column 10, :line 38, :record false, :end-line 38, :skip-protocol-flag nil}, parse-response {:protocol-inline nil, :meta {:file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/remote_db_service.cljs", :line 10, :column 7, :end-line 10, :end-column 21, :arglists (quote ([promise]))}, :name teach-by-friends.remote-db-service/parse-response, :variadic false, :file "src/teach_by_friends/remote_db_service.cljs", :end-column 21, :method-params ([promise]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([promise]))}, response-from-json {:protocol-inline nil, :meta {:file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/remote_db_service.cljs", :line 14, :column 7, :end-line 14, :end-column 25, :arglists (quote ([promise]))}, :name teach-by-friends.remote-db-service/response-from-json, :variadic false, :file "src/teach_by_friends/remote_db_service.cljs", :end-column 25, :method-params ([promise]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([promise]))}, ->GithubDB {:protocol-inline nil, :meta {:file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/remote_db_service.cljs", :line 27, :column 10, :end-line 27, :end-column 18, :protocols #{teach-by-friends.remote-db-service/IRemoteDB}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([auth-api-key]))}, :protocols #{teach-by-friends.remote-db-service/IRemoteDB}, :name teach-by-friends.remote-db-service/->GithubDB, :variadic false, :file "src/teach_by_friends/remote_db_service.cljs", :end-column 18, :method-params ([auth-api-key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([auth-api-key])), :skip-protocol-flag nil}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:path :Dropbox-API-Arg auth-api-key :headers :Authorization :keywordize-keys}, :order [:keywordize-keys auth-api-key :headers :Authorization :Dropbox-API-Arg :path]}, :doc nil}