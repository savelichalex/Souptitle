;; Analyzed by ClojureScript 1.7.170
{:use-macros {reaction reagent.ratom}, :excludes #{}, :name teach-by-friends.subs, :imports nil, :requires {re-frame.core re-frame.core, const teach-by-friends.consts, teach-by-friends.consts teach-by-friends.consts}, :uses {register-sub re-frame.core}, :defs {chapter-word-list {:name teach-by-friends.subs/chapter-word-list, :file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/subs.cljs", :line 6, :column 1, :end-line 6, :end-column 28, :meta {:file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/subs.cljs", :line 6, :column 11, :end-line 6, :end-column 28}}, term-to-disable {:protocol-inline nil, :meta {:file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/subs.cljs", :line 20, :column 7, :end-line 20, :end-column 22, :arglists (quote ([term]))}, :name teach-by-friends.subs/term-to-disable, :variadic false, :file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/subs.cljs", :end-column 22, :method-params ([term]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([term]))}, term-to-active {:protocol-inline nil, :meta {:file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/subs.cljs", :line 24, :column 7, :end-line 24, :end-column 21, :arglists (quote ([term translate]))}, :name teach-by-friends.subs/term-to-active, :variadic false, :file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/subs.cljs", :end-column 21, :method-params ([term translate]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([term translate]))}, add-status-keys {:protocol-inline nil, :meta {:file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/subs.cljs", :line 29, :column 7, :end-line 29, :end-column 22, :arglists (quote ([term-to-translate term-tranlsate terms]))}, :name teach-by-friends.subs/add-status-keys, :variadic false, :file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/subs.cljs", :end-column 22, :method-params ([term-to-translate term-tranlsate terms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 3, :fn-var true, :arglists (quote ([term-to-translate term-tranlsate terms]))}, filter-terms-by-search-predicate {:protocol-inline nil, :meta {:file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/subs.cljs", :line 38, :column 7, :end-line 38, :end-column 39, :arglists (quote ([terms predicate]))}, :name teach-by-friends.subs/filter-terms-by-search-predicate, :variadic false, :file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/subs.cljs", :end-column 39, :method-params ([terms predicate]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists (quote ([terms predicate]))}, filter-well-known-words {:protocol-inline nil, :meta {:file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/subs.cljs", :line 45, :column 7, :end-line 45, :end-column 30, :arglists (quote ([terms well-known-terms]))}, :name teach-by-friends.subs/filter-well-known-words, :variadic false, :file "/Users/admin/for-clojure/teach-by-friends/src/teach_by_friends/subs.cljs", :end-column 30, :method-params ([terms well-known-terms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 2, :fn-var true, :arglists (quote ([terms well-known-terms]))}}, :require-macros {reagent.ratom reagent.ratom}, :cljs.analyzer/constants {:seen #{:by-rank :well-known-terms :chapters :get-chapter :overall-number :sort-chapter :default :serials-list :rank :term-to-translate :seasons-list :show-search? :term :chapter :by-alphabet :seasons :status :chapters-list :translate :serials :search-predicate :term-translate :hierarchy}, :order [:hierarchy :default :by-rank :term :rank :overall-number :by-alphabet :status :translate :get-chapter :term-to-translate :term-translate :sort-chapter :chapter :well-known-terms :search-predicate :serials :serials-list :seasons :seasons-list :chapters :chapters-list :show-search?]}, :doc nil}